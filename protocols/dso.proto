# Tektronix DSO 4000

Terminator = LF;
ReplyTimeout = 2000;
ReadTimeout = 5000;
LockTimeout = 8000;

# Setup, either on-demand when processed, but also automatically when connecting:
# Do not echo header in reply, but if you do, then use full name
# Get 10000 samples, 1 byte per sample
setup
{
  out ":HEAD OFF;:VERB ON;:DAT:STAR 1;:DAT:STOP 10000;:DAT:WID 1;:DAT:ENC RIBinary;";
  @init
  {
    out ":HEAD OFF;:VERB ON;:DAT:STAR 1;:DAT:STOP 10000;:DAT:WID 1;:DAT:ENC RIBinary;";
  }
}

# Could read waveform as ASCII,
# Separator = ",";
# in "%i";
# 'raw' waveform with NELM=10000.
#
# But that creates about 4x more data to transfer.
#
# Binary curve reply:
# '#5'    : 5 decimals for data size follow
# '10000' : Number of data points
# <binary>: 10000 signed bytes of data
# CR/LR   : 2 more bytes for end of line
#
# Protocol based on help from Dirk Zimoch:
# Parse '#510000' verbatim,
# then waveform record repeats %r for NELM.
# Cannot use 'Terminator' because <binary> could contain anything.
# So stop after 'MaxInput'.
# This does add CR/LF to the 'raw' waveform with NELM=10002,
# but following 'asub_compute_y' only uses first 10000.
curve1
{
  InTerminator="";
  MaxInput=10009;
  out ":DAT:SOU CH1;:CURV?";
  in "#510000%r";
}

curve2
{
  InTerminator="";
  MaxInput=10009;
  out ":DAT:SOU CH2;:CURV?";
  in "#510000%r";
}

curve3
{
  InTerminator="";
  MaxInput=10009;
  out ":DAT:SOU CH3;:CURV?";
  in "#510000%r";
}

curve4
{
  InTerminator="";
  MaxInput=10009;
  out ":DAT:SOU CH4;:CURV?";
  in "#510000%r";
}


# Info is returned as "xxx".
# Use regex to get just xxx, not quotes
info1
{
  out ":DAT:SOU CH1;:WFMOutpre:WFID?";
  in '%.1/"(.*)"/';
}

info2
{
  out ":DAT:SOU CH2;:WFMOutpre:WFID?";
  in '%.1/"(.*)"/';
}

info3
{
  out ":DAT:SOU CH3;:WFMOutpre:WFID?";
  in '%.1/"(.*)"/';
}

info4
{
  out ":DAT:SOU CH4;:WFMOutpre:WFID?";
  in '%.1/"(.*)"/';
}

xincr
{
  out ":WFMOUTPRE:XINCR?";
  in "%f";
}

mult1
{
  out ":DAT:SOU CH1;:WFMOutpre:YMUlt?";
  in "%f";
}

mult2
{
  out ":DAT:SOU CH2;:WFMOutpre:YMUlt?";
  in "%f";
}

mult3
{
  out ":DAT:SOU CH3;:WFMOutpre:YMUlt?";
  in "%f";
}

mult4
{
  out ":DAT:SOU CH4;:WFMOutpre:YMUlt?";
  in "%f";
}

